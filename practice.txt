AngularJS - version 1.0 was released in 2012; JavaScript framework;
====================================================================================================================================
Properties: AngularJS is easy to learn; It is perfect for Single Page Applications (SPAs); It extends HTML with new attributes.
Script: <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.9/angular.min.js"></script>

AngularJS extends HTML with ng-directives.
The ng-app directive defines an AngularJS application.
The ng-model directive binds the value of HTML controls (input, select, textarea) to application data.
The ng-bind directive binds application data to the HTML view.

Example:

<div ng-app="" ng-init="firstName='John'">
<p>The name is <span ng-bind="firstName"></span></p>
</div>

Alternative

<div ng-app="" ng-init="firstName='John'">
  <p>The name is {{firstName}}</p>
</div>

//Example with module and controller

<div ng-app="myApp" ng-controller="myCtrl">
  First Name: <input type="text" ng-model="firstName">
<br>
  Full Name: {{firstName}}
</div>

<script>
  var app = angular.module('myApp', []);
  app.controller('myCtrl', function($scope) {
    $scope.firstName= "Tony";
  });
</script>

Expressions

{{name}}, ng-bind="name"

Modules
The module is a container for the different parts of an application and controllers always belong to a module.
var app = angular.module('myApp', []);

Directives

New directives are created by using the .directive function.
<body ng-app="myApp">
  <my-favourite-hero></my-favourite-hero>
<script>
  var app = angular.module("myApp", []);
  app.directive("myFavouriteHero", function() {
    return {
      restrict : "A",
      template : "<h1>Akshay Kumar</h1>"
    };
  });
</script>
</body>

The legal restrict values are:

E for Element name
A for Attribute
C for Class
M for Comment
By default the value is EA, meaning that both Element names and attribute names can invoke the directive.

Models

The ng-model directive binds the value of HTML controls (input, select, textarea) to application data.

Validation
<form ng-app="" name="myForm">
  Email:
    <input type="email" name="myAddress" ng-model="text">
    <span ng-show="myForm.myAddress.$error.email">Not a valid e-mail address</span>
</form>

Data Binding
Data binding in AngularJS is the synchronization between the model and the view.
{{name}}, ng-bind="name"

Controllers
AngularJS controllers control the data of AngularJS applications.
AngularJS controllers are regular JavaScript Objects.

Scopes
The scope is the binding part between the HTML (view) and the JavaScript (controller).
The scope is an object with the available properties and methods.
The scope is available for both the view and the controller.

Filters

{{ name | lowercase }}

Service

In AngularJS, a service is a function, or object, that is available for, and limited to, your AngularJS application.
AngularJS has about 30 built-in services.

Routing

If you want to navigate to different pages in your application, but you also want the application to be a SPA (Single Page Application), with no page reloading, you can use the ngRoute module. The ngRoute module routes your application to different pages without reloading the entire application.

<body ng-app="myApp">

<p><a href="#/!">Main</a></p>
<a href="#!red">Red</a>
<a href="#!green">Green</a>
<a href="#!blue">Blue</a>

<div ng-view></div>

<script>
var app = angular.module("myApp", ["ngRoute"]);
app.config(function($routeProvider) {
  $routeProvider
  .when("/", {
    templateUrl : "main.htm"
  })
  .when("/red", {
    templateUrl : "red.htm"
  })
  .when("/green", {
    templateUrl : "green.htm"
  })
  .when("/blue", {
    templateUrl : "blue.htm"
  });
});
</script>
</body>




